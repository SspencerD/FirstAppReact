{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","images/loading.gif","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cat","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setstate","useEffect","then","setTimeout","useFetchGifs","carga","GifExpertApp","categories","divRoot","document","querySelector","ReactDOM","render"],"mappings":"mMAEaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EAGVC,mBAAS,IAHC,mBAGvCC,EAHuC,KAG3BC,EAH2B,KA0B9C,OAEI,sBAAMC,SAjBW,SAACC,GAClBA,EAAEC,iBAEEJ,EAAWK,OAAOC,OAAS,IAE3BR,GAAc,SAAAS,GAAG,OAAKP,GAAL,mBAAoBO,OACrCN,EAAc,MAWlB,SACI,uBACIO,KAAK,OACLC,MAAOT,EACPU,SA1Bc,SAACP,GACvBF,EAAcE,EAAEQ,OAAOF,a,+BCLlBG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAEbC,EAFa,iDAEmCC,UAAUH,GAF7C,+DAGAI,MAAOF,GAHP,cAGbG,EAHa,gBAIEA,EAAKC,OAJP,uBAIZC,EAJY,EAIZA,KAEDC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAE1B,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,IAClCP,KAAMe,EAAIf,SAZC,kBAgBba,GAhBa,4CAAH,sDCDPO,EAAc,SAAC,GAAmB,EAAlBJ,GAAmB,IAAhBC,EAAe,EAAfA,MAAMV,EAAS,EAATA,IAIlC,OACI,sBAAKc,UAAU,6CAAf,UAEI,qBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,4BAAIA,QCXD,MAA0B,oCCM5BO,EAAU,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAAe,ECCb,SAACA,GAAc,IAAD,EAEZd,mBAAS,CAE/BqB,KAAM,GACNa,SAAS,IALyB,mBAE/BC,EAF+B,KAExBC,EAFwB,KA0BtC,OAlBAC,qBAAU,WAENxB,EAAQC,GACHwB,MAAK,SAAAd,GAEFe,YAAW,WAEPH,EAAS,CACLf,KAAMG,EACNU,SAAS,MAId,UAGZ,CAACpB,IAEGqB,EDxB2BK,CAAa1B,GAAjCa,EAHuB,EAG7BN,KAAca,EAHe,EAGfA,QAEtB,OACI,qCACI,mCAAMpB,EAAN,OAEEoB,GAAW,qBAAKH,IAAKU,EAAOT,IAAI,YAKlC,qBAAKF,UAAU,YAAf,SAGQH,EAAOJ,KAAI,SAACC,GAAD,OACP,cAAC,EAAD,eAEQA,GADCA,EAAIC,SAWzB,2BEaGiB,EA1Ca,WAAM,MAIM1C,mBAAS,CAAC,YAJhB,mBAIvB2C,EAJuB,KAIX5C,EAJW,KAM9B,OAEI,qCACI,oBAAI+B,UAAU,0DAAd,qCACA,cAAC,EAAD,CAAa/B,cAAeA,IAE5B,uBAIA,6BAEQ4C,EAAWpB,KAAI,SAAAT,GAAQ,OAEnB,cAAC,EAAD,CAEAA,SAAUA,GADJA,YCrBxB8B,G,MAAUC,SAASC,cAAc,UAGvCC,IAASC,OAAO,cAAC,EAAD,IAAkBJ,K","file":"static/js/main.e5a00109.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types';\r\nexport const AddCategory = ({ setCategories }) => {\r\n\r\n\r\n    const [inputValue, setInputValue] = useState('');\r\n\r\n\r\n    const handleInputChange = (e) => {\r\n        setInputValue(e.target.value);\r\n    }\r\n\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        if (inputValue.trim().length > 2) {\r\n\r\n            setCategories(cat => [inputValue, ...cat]);\r\n            setInputValue('');\r\n\r\n        }\r\n\r\n\r\n\r\n\r\n    }\r\n\r\n    return (\r\n\r\n        <form onSubmit={handleSubmit}>\r\n            <input\r\n                type=\"text\"\r\n                value={inputValue}\r\n                onChange={handleInputChange}\r\n            />\r\n\r\n        </form>\r\n\r\n    );\r\n\r\n}\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired,\r\n\r\n}\r\n","\r\n\r\n\r\n\r\nexport const getGifs = async( category ) =>{\r\n\r\n    const url =`https://api.giphy.com/v1/gifs/search?q=${ encodeURI(category)}&limit=10&api_key=NJYUcaTuUNlHjkcMsdFQEbqfBogMPbCE`;\r\n    const resp = await fetch( url );\r\n    const {data} = await resp.json();\r\n\r\n    const gifs = data.map( img => {\r\n\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url,\r\n            type: img.type\r\n        }\r\n    })\r\n\r\n   return gifs;\r\n   \r\n\r\n\r\n\r\n}","import React from 'react'\r\n\r\n\r\nexport const GifGridItem = ({id,title,url}) => {\r\n\r\n\r\n    //console.log(id,title,url);\r\n    return (\r\n        <div className='card animate__backInDown animate__delay-3s'>\r\n\r\n            <img src={url} alt={title}/>\r\n            <p>{title}</p>\r\n\r\n            \r\n        </div>\r\n    )\r\n}\r\n","export default __webpack_public_path__ + \"static/media/loading.3533ab12.gif\";","\r\nimport React from 'react';\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\nimport { GifGridItem } from './GifGridItem';\r\nimport carga from '../images/loading.gif';\r\n\r\nexport const GifGrid = ({ category }) => {\r\n\r\n\r\n    const { data: images, loading } = useFetchGifs(category);\r\n\r\n    return (\r\n        <>\r\n            <h3> {category} </h3>\r\n\r\n            { loading && <img src={carga} alt='loading'></img>}\r\n\r\n\r\n\r\n\r\n            <div className='card-grid'>\r\n\r\n                {\r\n                    images.map((img) => (\r\n                        <GifGridItem\r\n                            key={img.id}\r\n                            {...img}\r\n\r\n                        />\r\n\r\n                    ))\r\n\r\n                }\r\n\r\n\r\n            </div>\r\n            <hr />\r\n        </>\r\n    )\r\n}\r\n","import { useEffect, useState } from \"react\"\r\nimport { getGifs } from '../helpers/getGifs';\r\n\r\n\r\n\r\n\r\n\r\nexport const useFetchGifs = (category) => {\r\n\r\n    const [state, setstate] = useState({\r\n\r\n        data: [],\r\n        loading: true,\r\n    });\r\n\r\n    useEffect(() => {\r\n\r\n        getGifs(category)\r\n            .then(img => {\r\n\r\n                setTimeout(() => {\r\n\r\n                    setstate({\r\n                        data: img,\r\n                        loading: false\r\n\r\n                    });\r\n\r\n                }, 3000);\r\n            })\r\n\r\n    }, [category])\r\n\r\n    return state; // { data:[], loading: true};\r\n}","\r\nimport React, { useState } from 'react';\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\n\r\n\r\nexport const GifExpertApp = () => {\r\n\r\n\r\n    //const categories = ['Age Of Empires','Valheim','Conan Exiles','Rust','Sea Of Thieves'];\r\n    const [categories, setCategories] = useState(['Valheim']);\r\n\r\n    return (\r\n\r\n        <>\r\n            <h2 className=\"animate__animated animate__backInDown animate__delay-2s\">Loh' Gifi del loco PePe</h2>\r\n            <AddCategory setCategories={setCategories} />\r\n\r\n            <hr />\r\n\r\n\r\n\r\n            <ol>\r\n                {\r\n                    categories.map(category => (\r\n\r\n                        <GifGrid \r\n                        key={ category }\r\n                        category={category} />\r\n\r\n                    ))\r\n\r\n\r\n                }\r\n\r\n            </ol>\r\n\r\n\r\n\r\n        </>\r\n\r\n\r\n\r\n    )\r\n\r\n\r\n}\r\n\r\nexport default GifExpertApp;\r\n\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './GifExpertApp';\nimport './index.css';\n\n\n\nconst divRoot = document.querySelector('#root');\n\n\nReactDOM.render(<GifExpertApp />, divRoot);"],"sourceRoot":""}